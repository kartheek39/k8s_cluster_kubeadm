---
- hosts: kubernetes:children
  become: yes
  vars_files:
    - env_variables
  tasks:
    - name: Make sure br_netfilter is loaded
      shell: lsmod | grep br_netfilter
      register: br_netfilter_loaded
      failed_when: br_netfilter_loaded.rc != 1 and br_netfilter_loaded.rc != 0

    - name: Load br_netfilter explicitly
      shell: sudo modprobe br_netfilter

    - name: Make sure iptables to correctly see bridged traffic
      shell: sysctl net.bridge.bridge-nf-call-iptables=1

    - name: Reload sysctl after changes done to net.bridge
      shell: sysctl --system
      become: sudo

    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force=yes

    - name: Install necessary system packages (aptitude, curl, etc.)
      apt:
        pkg:
          - curl
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - gnupg
        state: latest
        update_cache: yes
      become: yes

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"  # or specify a specific username if needed
        group: docker
        append: yes

#    - name: Configuring Systemd cgroup driver for containerd
#      lineinfile:
#        path: /etc/containerd/config.toml
#        regexp: 'SystemdCgroup = false'
#        line: 'SystemdCgroup = true'

    - name: Restart Docker service to apply group changes
      command: systemctl restart docker
      args:
        creates: /etc/systemd/system/docker.service

    - name: Update apt and install apt-transport-https
      apt: update_cache=yes name=apt-transport-https state=latest
  
    - name: Ensure /etc/apt/keyrings directory exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      become: true

    - name: Add Kubernetes GPG Key
      get_url:
         url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
         dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
         mode: "0644"
      become: true

    - name: Add Kubernetes APT repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /"
        state: present
        update_cache: yes
      become: true

    - name: Set correct permissions for Kubernetes keyring
      file:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        mode: "0644"
      become: true

    - name: Set correct permissions for Kubernetes repository list
      file:
        path: /etc/apt/sources.list.d/pkgs_k8s_io_core_stable_v1_32_deb.list
        mode: "0644"
      become: true

#    - name: Install Kubernetes binaries
#      apt: 
#        name: "{{ packages }}"
#        state: present
#        update_cache: yes
#      vars:
#        packages:
#          - kubelet 
#          - kubeadm 
#          - kubectl

    - name: install Kubelet
      apt:
        name: kubelet=1.32.*
        state: present
        update_cache: true
        force: yes
      become: true

    - name: Install Kubeadm
      apt:
        name: kubeadm=1.32.*
        state: present
        force: yes
      become: true
















